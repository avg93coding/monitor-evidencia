import streamlit as st
from PIL import Image
import os
import time
import random
import pandas as pd
import altair as alt
from streamlit_lottie import st_lottie
import json
import requests
from datetime import datetime, timedelta
from dotenv import load_dotenv
from utils.pubmed_api import buscar_pubmed
from sources.europe_pmc import buscar_europe_pmc
from utils.summarizer import resumir_texto

# Cargar variables de entorno
load_dotenv()

# Configuraci√≥n general de la p√°gina
st.set_page_config(
    page_title="EvidenceWatch Pro | Monitor de Evidencia Cient√≠fica",
    layout="wide",
    page_icon="üß¨",
    initial_sidebar_state="expanded"
)

# Funci√≥n para cargar animaciones Lottie
def load_lottieurl(url: str):
    try:
        r = requests.get(url)
        if r.status_code != 200:
            return None
        return r.json()
    except:
        return None

# Cargar estilos CSS mejorados
estilos_path = "assets/estilos.css"
if os.path.exists(estilos_path):
    with open(estilos_path) as f:
        st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)
else:
    # CSS por defecto si no existe el archivo
    st.markdown("""
        <style>
        .main {
            background-color: #f8f9fa;
        }
        .stApp {
            max-width: 1200px;
            margin: 0 auto;
        }
        .dashboard-card {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            padding: 20px;
            margin-bottom: 20px;
        }
        .highlight-text {
            color: #1E88E5;
            font-weight: 600;
        }
        .sidebar .sidebar-content {
            background-image: linear-gradient(#2c3e50, #1a252f);
            color: white;
        }
        h1, h2, h3 {
            color: #2c3e50;
        }
        .stButton>button {
            background-color: #1E88E5;
            color: white;
            border-radius: 5px;
            padding: 0.5rem 1rem;
            font-weight: 500;
        }
        .stButton>button:hover {
            background-color: #1565C0;
        }
        .search-result {
            border-left: 4px solid #1E88E5;
            padding-left: 10px;
        }
        footer {
            visibility: hidden;
        }
        </style>
        """, unsafe_allow_html=True)

# ----- SIDEBAR -----
# Mostrar logo si existe
logo_path = "assets/logo.png"
if os.path.exists(logo_path):
    st.sidebar.image(logo_path, width=180)
else:
    st.sidebar.markdown("### üß¨ EvidenceWatch Pro")

st.sidebar.markdown("---")

# Men√∫ de navegaci√≥n lateral mejorado con iconos
menu = st.sidebar.radio(
    "Navegaci√≥n",
    ["üè† Dashboard", "üîç B√∫squeda Cient√≠fica", "üß™ Clinical Trials", "üìä An√°lisis", "‚öôÔ∏è Configuraci√≥n"]
)

# Mostrar informaci√≥n de usuario simulada
st.sidebar.markdown("---")
st.sidebar.markdown("### üë§ Usuario")
st.sidebar.markdown("Dr. Usuario Premium")
st.sidebar.progress(80)
st.sidebar.caption("Plan Pro - 80% utilizado")

# A√±adir un selector de fechas para filtrar resultados
st.sidebar.markdown("---")
st.sidebar.markdown("### üìÖ Filtros Temporales")
fecha_inicio = st.sidebar.date_input(
    "Desde",
    datetime.now() - timedelta(days=365)
)
fecha_fin = st.sidebar.date_input(
    "Hasta",
    datetime.now()
)

# A√±adir filtros adicionales
st.sidebar.markdown("### üîÑ Filtros Avanzados")
filtro_tipo = st.sidebar.multiselect(
    "Tipo de contenido",
    ["Art√≠culos", "Reviews", "Ensayos Cl√≠nicos", "Meta-an√°lisis", "Gu√≠as Cl√≠nicas"],
    default=["Art√≠culos", "Reviews"]
)

filtro_acceso = st.sidebar.radio(
    "Acceso",
    ["Todos", "Open Access", "Solo suscritos"]
)

st.sidebar.markdown("---")
st.sidebar.caption("¬© 2025 EvidenceWatch Pro v2.5")

# ----- MAIN CONTENT -----

# 1. DASHBOARD
if "üè† Dashboard" in menu:
    # Header de bienvenida
    col1, col2 = st.columns([3, 1])
    with col1:
        st.title("üß¨ EvidenceWatch Pro")
        st.markdown("""
        <div style='background-color: #e8f4fc; padding: 15px; border-radius: 5px; margin-bottom: 20px;'>
            <h4 style='margin:0'>Bienvenido al futuro del monitoreo de evidencia cient√≠fica</h4>
            <p style='margin-top:10px; margin-bottom:0'>Mant√©ngase actualizado con las √∫ltimas investigaciones cient√≠ficas a trav√©s de nuestras herramientas de an√°lisis avanzadas.</p>
        </div>
        """, unsafe_allow_html=True)
    with col2:
        # Cargar animaci√≥n Lottie para la secci√≥n principal
        lottie_url = "https://assets6.lottiefiles.com/packages/lf20_m6cuL6.json"
        lottie_json = load_lottieurl(lottie_url)
        if lottie_json:
            st_lottie(lottie_json, height=150, key="dashboard_animation")
        else:
            st.image("https://via.placeholder.com/150", width=150)

    # M√©tricas destacadas
    st.markdown("### üìà M√©tricas Clave")
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.markdown("""
        <div class='dashboard-card'>
            <h3 style='margin:0; font-size:16px'>Nuevas Publicaciones</h3>
            <h2 style='margin:0; color:#1E88E5; font-size:28px'>574</h2>
            <p style='margin:0; color:green; font-size:12px'>‚Üë 12% desde ayer</p>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        st.markdown("""
        <div class='dashboard-card'>
            <h3 style='margin:0; font-size:16px'>Ensayos Cl√≠nicos</h3>
            <h2 style='margin:0; color:#1E88E5; font-size:28px'>128</h2>
            <p style='margin:0; color:orange; font-size:12px'>‚Üì 3% esta semana</p>
        </div>
        """, unsafe_allow_html=True)
    
    with col3:
        st.markdown("""
        <div class='dashboard-card'>
            <h3 style='margin:0; font-size:16px'>Actualizaciones Gu√≠as</h3>
            <h2 style='margin:0; color:#1E88E5; font-size:28px'>12</h2>
            <p style='margin:0; color:green; font-size:12px'>‚Üë 2 nuevas hoy</p>
        </div>
        """, unsafe_allow_html=True)
    
    with col4:
        st.markdown("""
        <div class='dashboard-card'>
            <h3 style='margin:0; font-size:16px'>Impacto Promedio</h3>
            <h2 style='margin:0; color:#1E88E5; font-size:28px'>8.4</h2>
            <p style='margin:0; color:green; font-size:12px'>‚Üë 0.3 este mes</p>
        </div>
        """, unsafe_allow_html=True)

    # Gr√°ficos de tendencias simulados
    st.markdown("### üìä Tendencias de Publicaciones")
    
    # Datos simulados para el gr√°fico
    chart_data = pd.DataFrame({
        'fecha': pd.date_range(start='2025-01-01', periods=90, freq='D'),
        'PubMed': [random.randint(80, 150) for _ in range(90)],
        'Europe PMC': [random.randint(60, 120) for _ in range(90)],
        'Clinical Trials': [random.randint(10, 40) for _ in range(90)]
    })
    
    # Crear gr√°fico de l√≠neas con Altair
    chart = alt.Chart(chart_data.melt('fecha', var_name='fuente', value_name='publicaciones')).mark_line().encode(
        x=alt.X('fecha:T', title='Fecha'),
        y=alt.Y('publicaciones:Q', title='N√∫mero de Publicaciones'),
        color=alt.Color('fuente:N', legend=alt.Legend(title="Fuente")),
        tooltip=['fecha', 'fuente', 'publicaciones']
    ).properties(
        height=300
    ).interactive()
    
    st.altair_chart(chart, use_container_width=True)
    
    # A√±adir temas destacados
    st.markdown("### üî• Temas Emergentes")
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("""
        <div class='dashboard-card'>
            <h4 style='margin:0'>Avances en Terapias GLP-1</h4>
            <p style='margin-top:10px'>Las investigaciones sobre agonistas del receptor GLP-1 para obesidad y diabetes muestran resultados prometedores en estudios a largo plazo.</p>
            <div style='display:flex; gap:5px'>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:3px 8px; border-radius:15px; font-size:12px'>Diabetes</span>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:3px 8px; border-radius:15px; font-size:12px'>Obesidad</span>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:3px 8px; border-radius:15px; font-size:12px'>GLP-1</span>
            </div>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        <div class='dashboard-card'>
            <h4 style='margin:0'>Microbioma y Enfermedades Inflamatorias</h4>
            <p style='margin-top:10px'>Nuevas publicaciones establecen conexiones entre alteraciones del microbioma y patog√©nesis de enfermedades inflamatorias intestinales.</p>
            <div style='display:flex; gap:5px'>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:3px 8px; border-radius:15px; font-size:12px'>Microbioma</span>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:3px 8px; border-radius:15px; font-size:12px'>Enfermedad de Crohn</span>
            </div>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        st.markdown("""
        <div class='dashboard-card'>
            <h4 style='margin:0'>Biomarcadores en Oncolog√≠a</h4>
            <p style='margin-top:10px'>Avances en la detecci√≥n temprana de c√°ncer mediante biomarcadores circulantes en sangre permiten diagn√≥sticos m√°s precisos.</p>
            <div style='display:flex; gap:5px'>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:3px 8px; border-radius:15px; font-size:12px'>Oncolog√≠a</span>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:3px 8px; border-radius:15px; font-size:12px'>Biomarcadores</span>
            </div>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        <div class='dashboard-card'>
            <h4 style='margin:0'>Inmunoterapias de √öltima Generaci√≥n</h4>
            <p style='margin-top:10px'>Los ensayos cl√≠nicos fase III muestran eficacia aumentada en combinaciones de inhibidores de checkpoint para tumores s√≥lidos avanzados.</p>
            <div style='display:flex; gap:5px'>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:3px 8px; border-radius:15px; font-size:12px'>Inmunoterapia</span>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:3px 8px; border-radius:15px; font-size:12px'>Oncolog√≠a</span>
            </div>
        </div>
        """, unsafe_allow_html=True)

# 2. B√öSQUEDA
elif "üîç B√∫squeda Cient√≠fica" in menu:
    st.title("üîç B√∫squeda Cient√≠fica Inteligente")
    
    # Introducci√≥n a la herramienta
    st.markdown("""
    <div style='background-color:#f0f7ff; padding:15px; border-radius:5px; margin-bottom:20px;'>
        <h4 style='margin-top:0'>B√∫squeda unificada en las principales bases de datos cient√≠ficas</h4>
        <p>Nuestra tecnolog√≠a permite b√∫squedas simult√°neas en PubMed, Europe PMC y otras fuentes cient√≠ficas con an√°lisis de IA integrado.</p>
    </div>
    """, unsafe_allow_html=True)
    
    # Formulario de b√∫squeda mejorado
    col1, col2 = st.columns([3, 1])
    
    with col1:
        query = st.text_input("üîé Escriba su t√©rmino de b√∫squeda", value="semaglutide", 
                              placeholder="Ej: semaglutide in obesity, machine learning diagnostics...")
    
    with col2:
        max_resultados = st.slider("Resultados por fuente", 5, 50, 10)
    
    # Opciones avanzadas
    with st.expander("Opciones avanzadas de b√∫squeda"):
        col1, col2, col3 = st.columns(3)
        
        with col1:
            idioma = st.selectbox("Idioma", ["Todos", "Ingl√©s", "Espa√±ol", "Franc√©s", "Alem√°n"])
            ordenar_por = st.selectbox("Ordenar por", ["Relevancia", "Fecha (reciente)", "Fecha (antigua)", "Factor de impacto"])
        
        with col2:
            tipo_documento = st.multiselect("Tipo de documento", 
                                         ["Todos", "Art√≠culo original", "Revisi√≥n", "Metaan√°lisis", "Ensayo cl√≠nico", "Gu√≠a cl√≠nica"],
                                         default=["Todos"])
            a√±os = st.slider("Rango de a√±os", 2000, 2025, (2020, 2025))
        
        with col3:
            solo_humanos = st.checkbox("Solo estudios en humanos", value=True)
            solo_abiertos = st.checkbox("Solo acceso abierto", value=False)
            incluir_preprints = st.checkbox("Incluir preprints", value=True)

    # Bot√≥n de b√∫squeda principal
    if st.button("Buscar evidencia cient√≠fica", use_container_width=True):
        
        # Contenedor para mostrar el progreso de la b√∫squeda
        progress_container = st.empty()
        
        progress_bar = progress_container.progress(0)
        for i in range(101):
            time.sleep(0.01)  # Simular carga
            progress_bar.progress(i)
        
        progress_container.empty()
        
        # Informaci√≥n sobre los resultados
        st.success(f"Se encontraron 87 resultados para '{query}' en todas las fuentes")
        
        # Pesta√±as para organizar los resultados
        tab1, tab2, tab3, tab4 = st.tabs(["üìë Todos los resultados", "üìä PubMed", "üåç Europe PMC", "üí° An√°lisis de IA"])
        
        # Pesta√±a 1: Todos los resultados
        with tab1:
            # Simulaci√≥n de resultados combinados
            for i in range(1, 6):
                with st.expander(f"Efficacy and safety of semaglutide in type 2 diabetes patients - Phase {i} clinical trial"):
                    col1, col2 = st.columns([4, 1])
                    
                    with col1:
                        st.markdown(f"""
                        **Autores:** Jensen AB, Smith JR, Anderson P, et al.
                        
                        **Publicado en:** New England Journal of Medicine ‚Ä¢ {2025-i} ‚Ä¢ Factor de impacto: {round(10.5 - i*0.5, 1)}
                        
                        **Resumen:** This randomized clinical trial evaluated the efficacy and safety of semaglutide in patients with type 2 diabetes over a 52-week period. The study demonstrated significant improvements in glycemic control and weight reduction compared to placebo, with a favorable safety profile.
                        
                        **Conclusiones clave:** Semaglutide showed dose-dependent reductions in HbA1c and body weight with acceptable tolerability.
                        """)
                        
                        st.markdown("""
                        <div style='display:flex; gap:5px'>
                            <span style='background-color:#e1f5fe; color:#0277bd; padding:3px 8px; border-radius:15px; font-size:12px'>Diabetes</span>
                            <span style='background-color:#e1f5fe; color:#0277bd; padding:3px 8px; border-radius:15px; font-size:12px'>Semaglutide</span>
                            <span style='background-color:#e1f5fe; color:#0277bd; padding:3px 8px; border-radius:15px; font-size:12px'>Clinical Trial</span>
                        </div>
                        """, unsafe_allow_html=True)
                    
                    with col2:
                        st.markdown(f"""
                        **PMID:** 3652891{i}
                        
                        **Citado:** {120 - i*15} veces
                        
                        **Acceso:** {'Abierto ‚úì' if i % 2 == 0 else 'Restringido'}
                        """)
                        
                        st.download_button(
                            label="PDF",
                            data=b"sample",
                            file_name=f"semaglutide_study_{i}.pdf",
                            mime="application/pdf",
                        )
        
        # Pesta√±a 2: PubMed
        with tab2:
            if query:
                with st.spinner("Consultando PubMed..."):
                    resultados_pubmed = buscar_pubmed(query, max_resultados)
                if resultados_pubmed:
                    for r in resultados_pubmed:
                        with st.expander(r["T√≠tulo"]):
                            col1, col2 = st.columns([3, 1])
                            
                            with col1:
                                st.markdown(f"**Autores:** {r['Autores']}")
                                st.markdown(f"**Fuente:** {r['Fuente']}")
                                st.markdown(f"**Resumen original:**\n\n{r['Resumen']}")
                            
                            with col2:
                                st.markdown(f"**PMID:** {r['PMID']}")
                                # A√±adir bot√≥n para guardar o exportar
                                st.button("‚≠ê Guardar", key=f"save_pubmed_{r['PMID']}")
                                st.button("üì§ Exportar", key=f"export_pubmed_{r['PMID']}")
                            
                            # Resumen por IA
                            st.markdown("**üß† An√°lisis de IA:**")
                            with st.spinner("Analizando contenido..."):
                                resumen_ia = resumir_texto(r["Resumen"])
                                st.info(resumen_ia)
                else:
                    st.warning("No se encontraron resultados en PubMed.")
        
        # Pesta√±a 3: Europe PMC
        with tab3:
            if query:
                with st.spinner("Consultando Europe PMC..."):
                    resultados_epmc = buscar_europe_pmc(query, max_resultados)
                if resultados_epmc:
                    for e in resultados_epmc:
                        with st.expander(e["T√≠tulo"]):
                            col1, col2 = st.columns([3, 1])
                            
                            with col1:
                                st.markdown(f"**Fuente:** {e['Fuente']}")
                                st.markdown(f"**Tipo de publicaci√≥n:** {e['Tipo']}")
                                # A√±adir enlaces a texto completo cuando est√©n disponibles
                                st.markdown(f"**Enlace:** [Ver art√≠culo completo]({e['Enlace']})")
                            
                            with col2:
                                st.markdown(f"**ID:** {e['ID']}")
                                # A√±adir botones de acci√≥n
                                st.button("‚≠ê Guardar", key=f"save_epmc_{e['ID']}")
                                st.button("üì§ Exportar", key=f"export_epmc_{e['ID']}")
                else:
                    st.warning("No se encontraron resultados en Europe PMC.")
        
        # Pesta√±a 4: An√°lisis de IA
        with tab4:
            st.subheader("üß† An√°lisis de tendencias por IA")
            
            # Simulaci√≥n de an√°lisis de IA
            st.markdown("""
            <div style='background-color:#f0f7ff; padding:20px; border-radius:5px; margin-bottom:20px;'>
                <h4 style='margin-top:0'>Insights sobre semaglutide</h4>
                <p>Basado en el an√°lisis de 87 publicaciones recientes, encontramos las siguientes tendencias:</p>
                <ul>
                    <li><strong>Efectividad:</strong> El 92% de los estudios reportan efectividad significativa en reducci√≥n de peso y control gluc√©mico.</li>
                    <li><strong>Poblaciones:</strong> La mayor√≠a de estudios se han realizado en poblaciones de Am√©rica del Norte y Europa, con creciente inter√©s en diversidad √©tnica.</li>
                    <li><strong>Efectos secundarios:</strong> Los efectos gastrointestinales son los m√°s comunes, con tendencia a disminuir tras las primeras semanas.</li>
                    <li><strong>Comparaciones:</strong> Superioridad demostrada frente a otros GLP-1 RA en t√©rminos de reducci√≥n de HbA1c y peso.</li>
                </ul>
            </div>
            """, unsafe_allow_html=True)
            
            # Gr√°fico de tendencias
            st.subheader("Evoluci√≥n de las publicaciones")
            chart_data = pd.DataFrame({
                'A√±o': [2020, 2021, 2022, 2023, 2024, 2025],
                'Publicaciones': [12, 18, 29, 47, 68, 23]
            })
            
            chart = alt.Chart(chart_data).mark_line(point=True).encode(
                x='A√±o:O',
                y='Publicaciones:Q',
                tooltip=['A√±o', 'Publicaciones']
            ).properties(
                height=300
            ).interactive()
            
            st.altair_chart(chart, use_container_width=True)
            
            # Temas relacionados
            st.subheader("Conceptos relacionados")
            st.markdown("""
            <div style='display:flex; flex-wrap:wrap; gap:10px'>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:8px 15px; border-radius:20px; font-size:14px'>GLP-1 (95%)</span>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:8px 15px; border-radius:20px; font-size:14px'>Obesidad (87%)</span>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:8px 15px; border-radius:20px; font-size:14px'>Diabetes tipo 2 (85%)</span>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:8px 15px; border-radius:20px; font-size:14px'>P√©rdida de peso (78%)</span>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:8px 15px; border-radius:20px; font-size:14px'>Control gluc√©mico (72%)</span>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:8px 15px; border-radius:20px; font-size:14px'>Efectos adversos (65%)</span>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:8px 15px; border-radius:20px; font-size:14px'>Cardiovascular (58%)</span>
                <span style='background-color:#e1f5fe; color:#0277bd; padding:8px 15px; border-radius:20px; font-size:14px'>Liraglutide (52%)</span>
            </div>
            """, unsafe_allow_html=True)
            
            # Fortaleza de la evidencia
            st.subheader("Evaluaci√≥n de la calidad de evidencia")
            col1, col2, col3, col4 = st.columns(4)
            
            with col1:
                st.markdown("""
                <div style='text-align:center'>
                    <h3 style='margin:0; font-size:16px'>Ensayos cl√≠nicos</h3>
                    <div style='font-size:24px; color:#2e7d32; font-weight:bold'>A+</div>
                </div>
                """, unsafe_allow_html=True)
            
            with col2:
                st.markdown("""
                <div style='text-align:center'>
                    <h3 style='margin:0; font-size:16px'>Meta-an√°lisis</h3>
                    <div style='font-size:24px; color:#2e7d32; font-weight:bold'>A</div>
                </div>
                """, unsafe_allow_html=True)
            
            with col3:
                st.markdown("""
                <div style='text-align:center'>
                    <h3 style='margin:0; font-size:16px'>Estudios observacionales</h3>
                    <div style='font-size:24px; color:#f9a825; font-weight:bold'>B+</div>
                </div>
                """, unsafe_allow_html=True)
            
            with col4:
                st.markdown("""
                <div style='text-align:center'>
                    <h3 style='margin:0; font-size:16px'>Calidad general</h3>
                    <div style='font-size:24px; color:#2e7d32; font-weight:bold'>A</div>
                </div>
                """, unsafe_allow_html=True)

# 3. CLINICAL TRIALS
elif "üß™ Clinical Trials" in menu:
    st.title("üß™ Monitoreo de Ensayos Cl√≠nicos")
    
    # Introducci√≥n a la secci√≥n
    st.markdown("""
    <div style='background-color:#f0f7ff; padding:15px; border-radius:5px; margin-bottom:20px;'>
        <h4 style='margin-top:0'>Seguimiento en tiempo real de ensayos cl√≠nicos globales</h4>
        <p>Monitoree los ensayos cl√≠nicos m√°s relevantes, sus actualizaciones y resultados preliminares en todo el mundo.</p>
    </div>
    """, unsafe_allow_html=True)
    
    # Filtros para ensayos cl√≠nicos
    col1, col2, col3 = st.columns(3)
    
    with col1:
        area_terapeutica = st.selectbox(
            "√Årea terap√©utica",
            ["Todas", "Oncolog√≠a", "Cardiolog√≠a", "Endocrinolog√≠a", "Neurolog√≠a", "Inmunolog√≠a", "Enfermedades raras"]
        )
    
    with col2:
        fase_ensayo = st.multiselect(
            "Fase del ensayo",
            ["I", "II", "III", "IV"],
            default=["III", "IV"]
        )
    
    with col3:
        estado_ensayo = st.multiselect(
            "Estado",
            ["Reclutando", "Activo, no reclutando", "Completado", "No iniciado"],
            default=["Reclutando", "Activo, no reclutando"]
        )
    
    # B√∫squeda espec√≠fica para ensayos
    query_trials = st.text_input("üîé Buscar ensayos cl√≠nicos", value="", 
                              placeholder="Ej: semaglutide, c√°ncer de p√°ncreas, hipertensi√≥n resistente...")
    
    if st.button("Buscar ensayos cl√≠nicos", use_container_width=True):
        st.success(f"Se encontraron 42 ensayos cl√≠nicos que coinciden con sus criterios")
        
        # Resultados ensayos cl√≠nicos
        for i in range(1, 6):
            with st.expander(f"SEMAGOLD-{i}: Evaluaci√≥n de semaglutide oral en pacientes con DMT2 y enfermedad cardiovascular"):
                col1, col2 = st.columns([3, 1])
                
                with col1:
                    st.markdown(f"""
                    **ID:** NCT0{random.randint(1000000, 9999999)}
                    
                    **Patrocinador:** {'Industria Farmac√©utica' if i % 2 == 0 else 'Centro M√©dico Universitario'}
                    
                    **Fase:** {random.choice(['II', 'III', 'IV'])}
                    
                    **Estado:** {random.choice(['Reclutando', 'Activo, no reclutando'])}
                    
                    **Sitios activos:** {random.randint(10, 50)} en {random.randint(3, 15)} pa√≠ses
                    
                    **Intervenci√≥n principal:** Semaglutide oral {random.choice(['10mg', '15mg', '20mg'])} una vez al d√≠a vs placebo
                    
                    **Actualizaci√≥n reciente:** {random.choice(['Resultados preliminares', 'Cambio en criterios de inclusi√≥n', 'Nuevo sitio de estudio', 'Reporte de seguridad'])}
                    """)
                    
                with col2:
                    st.markdown(f"""
                    **Participantes:** {random.randint(1000, 5000)}
                    
                    **Fecha inicio:** {random.choice(['Ene', 'Feb', 'Mar', 'Abr'])} 202{random.randint(3, 5)}
                    
                    **Fecha estimada conclusi√≥n:** {random.choice(['Jun', 'Jul', 'Ago', 'Sep', 'Oct'])} 202{random.randint(5, 7)}
                    """)
                    
                    # Botones de acci√≥n
                    st.button("üìå Seguir", key=f"follow_trial_{i}")
                    st.button("üìë Protocolo", key=f"protocol_trial_{i}")
                
                # Mostrar informaci√≥n adicional sobre el ensayo
                st.markdown("##### Criterios de inclusi√≥n principales:")
                st.markdown("""
                - Pacientes adultos (>18 a√±os)
                - Diabetes mellitus tipo 2 diagnosticada
                - HbA1c entre 7.0% y 10.5%
                - Enfermedad cardiovascular ateroscler√≥tica establecida
                - IMC ‚â•25 kg/m¬≤
                """)
                
                # Mapa de sitios de estudio
                st.markdown("##### Distribuci√≥n de sitios de estudio:")
                # Simulaci√≥n de datos para el mapa
                trial_sites = pd.DataFrame({
                    'lat': [random.uniform(25, 60) for _ in range(15)],
                    'lon': [random.uniform(-120, 30) for _ in range(15)],
                    'sitio': [f'Centro {random.randint(1, 100)}' for _ in range(15)],
                    'pacientes_reclutados': [random.randint(10, 100) for _ in range(15)]
                })
                
                st.map(trial_sites)
                
                # L√≠nea de tiempo del ensayo
                st.markdown("##### L√≠nea de tiempo del ensayo:")
                
                timeline_chart = alt.Chart(pd.DataFrame({
                    'Fase': ['Dise√±o', 'Inicio', 'Reclutamiento', 'Tratamiento', 'An√°lisis', 'Resultados'],
                    'Inicio': [0, 3, 6, 8, 24, 30],
                    'Fin': [3, 6, 18, 24, 30, 36],
                    'Estado': ['Completado', 'Completado', 'En progreso', 'Planificado', 'Planificado', 'Planificado']
                })).mark_bar().encode(
                    x='Inicio',
                    x2='Fin',
                    y='Fase',
                    color=alt.Color('Estado', scale=alt.Scale(
                        domain=['Completado', 'En progreso', 'Planificado'],
                        range=['#2ecc71', '#3498db', '#95a5a6']
                    ))
                ).properties(height=200)
                
                st.altair_chart(timeline_chart, use_container_width=True)
                
                # Resultados preliminares cuando est√©n disponibles
                if i <= 2:
                    st.markdown("##### Resultados preliminares disponibles:")
                    
                    results_data = pd.DataFrame({
                        'Grupo': ['Semaglutide', 'Placebo'],
                        'Reducci√≥n HbA1c (%)': [1.4 + random.uniform(-0.2, 0.2), 0.3 + random.uniform(-0.1, 0.1)],
                        'Reducci√≥n peso (kg)': [4.5 + random.uniform(-0.5, 0.5), 0.8 + random.uniform(-0.2, 0.2)],
                        'Eventos CV (%)': [3.2 + random.uniform(-0.5, 0.5), 5.1 + random.uniform(-0.5, 0.5)]
                    })
                    
                    st.dataframe(results_data, use_container_width=True)
                    
                    # Comentario anal√≠tico
                    st.info("üí° **An√°lisis IA:** Los datos preliminares sugieren una eficacia significativa en reducci√≥n de HbA1c y peso comparado con placebo, con tendencia a reducci√≥n de eventos cardiovasculares que necesita confirmaci√≥n al completar el estudio.")

# 4. AN√ÅLISIS
elif "üìä An√°lisis" in menu:
    st.title("üìä An√°lisis Avanzado de Evidencia")
    
    # Introducci√≥n a la secci√≥n
    st.markdown("""
    <div style='background-color:#f0f7ff; padding:15px; border-radius:5px; margin-bottom:20px;'>
        <h4 style='margin-top:0'>Herramientas de an√°lisis impulsadas por IA</h4>
        <p>Extraiga insights significativos de la literatura cient√≠fica mediante an√°lisis estad√≠sticos y visualizaciones avanzadas.</p>
    </div>
    """, unsafe_allow_html=True)
    
    # Selector de tipo de an√°lisis
    tipo_analisis = st.radio(
        "Seleccione tipo de an√°lisis",
        ["Comparativo", "Meta-an√°lisis", "Tendencias temporales", "Network Analysis"],
        horizontal=True
    )
    
    # Demostraci√≥n de herramienta de an√°lisis comparativo
    if tipo_analisis == "Comparativo":
        st.subheader("An√°lisis Comparativo de Tratamientos")
        
        col1, col2 = st.columns(2)
        
        with col1:
            tratamiento1 = st.selectbox(
                "Tratamiento 1",
                ["Semaglutide", "Liraglutide", "Tirzepatide", "Empagliflozin", "Canagliflozin"]
            )
        
        with col2:
            tratamiento2 = st.selectbox(
                "Tratamiento 2",
                ["Tirzepatide", "Semaglutide", "Liraglutide", "Dulaglutide", "Placebo"],
                index=1
            )
        
        endpoint = st.multiselect(
            "Endpoints a comparar",
            ["Reducci√≥n HbA1c", "P√©rdida de peso", "Eventos cardiovasculares", "Eventos adversos", "Abandonos"],
            default=["Reducci√≥n HbA1c", "P√©rdida de peso"]
        )
        
        # Bot√≥n para ejecutar an√°lisis
        if st.button("Ejecutar an√°lisis comparativo", use_container_width=True):
            st.success(f"Analizando diferencias entre {tratamiento1} y {tratamiento2} usando 17 estudios")
            
            # Forest plot simulado
            st.subheader("Forest Plot - Diferencia media en reducci√≥n de HbA1c")
            
            # Datos simulados para forest plot
            forest_data = pd.DataFrame({
                'Estudio': [f"Estudio {chr(65+i)}" for i in range(8)],
                'A√±o': [random.randint(2020, 2025) for _ in range(8)],
                'DiferenciaMean': [-0.3, -0.5, -0.2, -0.4, -0.6, -0.3, -0.5, -0.4],
                'LowerCI': [-0.5, -0.7, -0.4, -0.6, -0.8, -0.5, -0.7, -0.6],
                'UpperCI': [-0.1, -0.3, -0.1, -0.2, -0.4, -0.1, -0.3, -0.2],
                'Weight': [12, 15, 10, 18, 14, 11, 9, 11]
            })
            
            # Crear forest plot con Altair
            base = alt.Chart(forest_data).encode(
                y=alt.Y('Estudio:N', sort=None)
            )
            
            lines = base.mark_rule().encode(
                x=alt.X('LowerCI:Q', title='Diferencia en HbA1c (%)'),
                x2='UpperCI:Q'
            )
            
            points = base.mark_circle(size=100).encode(
                x='DiferenciaMean:Q',
                color=alt.value('black'),
                tooltip=['Estudio', 'A√±o', 'DiferenciaMean', 'LowerCI', 'UpperCI', 'Weight']
            )
            
            forest_chart = (lines + points).properties(height=300)
            
            st.altair_chart(forest_chart, use_container_width=True)
            
            # Gr√°fico de comparaci√≥n de barras
            st.subheader("Comparaci√≥n de endpoints")
            
            comparison_data = pd.DataFrame({
                'Endpoint': ['Reducci√≥n HbA1c (%)', 'P√©rdida de peso (kg)', 'Reducci√≥n PAS (mmHg)', 'Eventos CV (%)'],
                tratamiento1: [1.6, 5.2, 3.8, 3.2],
                tratamiento2: [1.2, 3.6, 2.9, 3.5],
            }).melt('Endpoint', var_name='Tratamiento', value_name='Valor')
            
            bar_chart = alt.Chart(comparison_data).mark_bar().encode(
                x=alt.X('Tratamiento:N'),
                y=alt.Y('Valor:Q'),
                color=alt.Color('Tratamiento:N', legend=None),
                column=alt.Column('Endpoint:N'),
                tooltip=['Tratamiento', 'Valor']
            ).properties(
                width=150
            )
            
            st.altair_chart(bar_chart, use_container_width=True)
            
            # Tabla de NNT y NNH
            st.subheader("N√∫meros Necesarios a Tratar (NNT) y para Da√±ar (NNH)")
            
            nnt_data = pd.DataFrame({
                'Resultado': ['Reducci√≥n HbA1c >1%', 'P√©rdida >5% peso corporal', 'Prevenci√≥n evento CV', 
                             'N√°usea', 'V√≥mito', 'Discontinuaci√≥n por EA'],
                'NNT/NNH': [4, 6, 32, -12, -18, -42],
                'IC 95%': ['3-5', '5-8', '22-68', '-9 a -16', '-14 a -25', '-30 a -86'],
                'Tipo': ['Beneficio', 'Beneficio', 'Beneficio', 'Da√±o', 'Da√±o', 'Da√±o']
            })
            
            def highlight_rows(row):
                if row['Tipo'] == 'Beneficio':
                    return ['background-color: #d4edda'] * len(row)
                else:
                    return ['background-color: #f8d7da'] * len(row)
            
            st.dataframe(nnt_data.style.apply(highlight_rows, axis=1), use_container_width=True)
            
            # An√°lisis de calidad de la evidencia
            st.subheader("Evaluaci√≥n de calidad de la evidencia")
            
            grade_data = pd.DataFrame({
                'Dominio': ['Riesgo de sesgo', 'Inconsistencia', 'Evidencia indirecta', 'Imprecisi√≥n', 'Sesgo de publicaci√≥n', 'Calidad global'],
                'Evaluaci√≥n': ['Bajo', 'Moderado', 'Bajo', 'Bajo', 'No detectado', 'Alta'],
                'Explicaci√≥n': [
                    'La mayor√≠a de estudios fueron doble ciego con bajo riesgo de sesgo',
                    'Heterogeneidad moderada (I¬≤=42%)',
                    'Comparaciones directas disponibles',
                    'Intervalos de confianza estrechos',
                    'An√°lisis de funnel plot sin asimetr√≠as significativas',
                    'Evidencia de alta calidad para la comparaci√≥n entre tratamientos'
                ]
            })
            
            st.table(grade_data)
            
            # Comentario anal√≠tico
            st.info("""
            üí° **Conclusi√≥n del an√°lisis IA:**
            
            La evidencia disponible indica que Semaglutide proporciona reducciones estad√≠sticamente superiores en HbA1c y peso corporal comparado con Liraglutide. Las diferencias en beneficios cardiovasculares no son estad√≠sticamente significativas. El perfil de eventos adversos es similar entre ambos tratamientos, con mayor probabilidad de s√≠ntomas gastrointestinales en el grupo de Semaglutide, pero con tasas de discontinuaci√≥n comparables.
            
            Se recomienda considerar Semaglutide como opci√≥n preferente cuando el objetivo principal sea la reducci√≥n de peso o el control gluc√©mico intensivo, mientras que ambas opciones muestran beneficios cardiovasculares comparables.
            """)
    
    # Demostraci√≥n de meta-an√°lisis
    elif tipo_analisis == "Meta-an√°lisis":
        st.subheader("Generador de Meta-an√°lisis")
        
        st.markdown("""
        Esta herramienta permite realizar meta-an√°lisis instant√°neos a partir de la literatura cient√≠fica actualizada.
        Seleccione los par√°metros para su an√°lisis:
        """)
        
        col1, col2 = st.columns(2)
        
        with col1:
            intervencion = st.selectbox(
                "Intervenci√≥n",
                ["GLP-1 RA", "SGLT2i", "DPP-4i", "Insulina", "Metformina"]
            )
            
            poblacion = st.selectbox(
                "Poblaci√≥n",
                ["DMT2", "Obesidad", "Insuficiencia card√≠aca", "Enfermedad renal cr√≥nica"]
            )
        
        with col2:
            desenlace = st.selectbox(
                "Desenlace principal",
                ["Mortalidad CV", "HbA1c", "Peso corporal", "Eventos renales", "MACE"]
            )
            
            modelo = st.radio(
                "Modelo estad√≠stico",
                ["Efectos aleatorios", "Efectos fijos"],
                horizontal=True
            )
        
        # Opciones avanzadas
        with st.expander("Opciones avanzadas"):
            col1, col2, col3 = st.columns(3)
            
            with col1:
                heterogeneidad = st.checkbox("An√°lisis de heterogeneidad", value=True)
                metaregresion = st.checkbox("Meta-regresi√≥n", value=False)
            
            with col2:
                sesgo_publicacion = st.checkbox("Evaluaci√≥n de sesgo de publicaci√≥n", value=True)
                analisis_sensibilidad = st.checkbox("An√°lisis de sensibilidad", value=True)
            
            with col3:
                subgrupos = st.multiselect(
                    "An√°lisis de subgrupos",
                    ["Edad", "Sexo", "Duraci√≥n diabetes", "Comorbilidades", "HbA1c basal"],
                    default=["Edad", "HbA1c basal"]
                )
        
        # Bot√≥n para ejecutar meta-an√°lisis
        if st.button("Ejecutar meta-an√°lisis", use_container_width=True):
            with st.spinner("Analizando estudios..."):
                time.sleep(2)  # Simular procesamiento
            
            st.success(f"Meta-an√°lisis completado | 23 estudios incluidos | 58,721 participantes")
            
            # Resultados del meta-an√°lisis
            col1, col2 = st.columns([2, 1])
            
            with col1:
                st.subheader("Forest Plot - Efectos sobre Mortalidad CV")
                
                # Imagen placeholder para forest plot
                st.image("https://via.placeholder.com/700x400?text=Forest+Plot", use_column_width=True)
            
            with col2:
                st.subheader("Resultados principales")
                st.markdown("""
                **Efecto global:**
                - RR: 0.82 (IC 95%: 0.74-0.91)
                - p < 0.001
                
                **Heterogeneidad:**
                - I¬≤ = 37%
                - Q = 34.8 (p = 0.07)
                
                **NNT:** 42 (IC 95%: 32-67)
                """)
            
            # Gr√°fico de embudo (funnel plot)
            st.subheader("Funnel Plot - Evaluaci√≥n de sesgo de publicaci√≥n")
            
            # Datos simulados para funnel plot
            funnel_data = pd.DataFrame({
                'LogRR': [-0.3 + random.uniform(-0.2, 0.2) for _ in range(23)],
                'SE': [random.uniform(0.05, 0.5) for _ in range(23)],
                'Estudio': [f"Estudio {i+1}" for i in range(23)]
            })
            
            funnel_chart = alt.Chart(funnel_data).mark_circle(size=80).encode(
                x=alt.X('LogRR:Q', title='Log Risk Ratio', scale=alt.Scale(domain=[-1, 0.4])),
                y=alt.Y('SE:Q', title='Standard Error', scale=alt.Scale(domain=[0.5, 0], reverse=True)),
                tooltip=['Estudio', 'LogRR', 'SE']
            ).properties(
                width=700,
                height=400
            )
            
            # L√≠nea vertical para el efecto promedio
            vline = alt.Chart(pd.DataFrame({'x': [-0.198]})).mark_rule(color='red').encode(x='x')
            
            # L√≠neas de embudo
            limit_data = pd.DataFrame({
                'LogRR': [-0.198 - 1.96 * x, -0.198 + 1.96 * x, None] for x in 
                         [0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5]
            }).melt(var_name='limit', value_name='LogRR')
            
            limit_data['SE'] = limit_data['limit'].map({
                f"-0.198 - 1.96 * {x}": x for x in [0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5]
            } | {
                f"-0.198 + 1.96 * {x}": x for x in [0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5]
            } | {
                'None': None
            })
            
            limit_data = limit_data.dropna()
            
            funnel_lines = alt.Chart(limit_data).mark_line(
                color='blue', opacity=0.5, strokeDash=[5, 5]
            ).encode(
                x='LogRR:Q',
                y='SE:Q'
            )
            
            st.altair_chart(vline + funnel_chart + funnel_lines, use_container_width=True)
            
            # An√°lisis de subgrupos
            st.subheader("An√°lisis de subgrupos")
            
            subgroup_data = pd.DataFrame({
                'Subgrupo': ['Global', '‚â§65 a√±os', '>65 a√±os', 'HbA1c ‚â§8%', 'HbA1c >8%', 'Con ECV', 'Sin ECV'],
                'RR': [0.82, 0.84, 0.76, 0.88, 0.75, 0.72, 0.91],
                'Lower': [0.74, 0.75, 0.65, 0.78, 0.67, 0.63, 0.82],
                'Upper': [0.91, 0.95, 0.89, 0.99, 0.84, 0.83, 1.02],
                'p_interaction': ['', '0.21', '', '0.03', '', '0.001', ''],
                'Significativo': [True, True, True, True, True, True, False]
            })
            
            # Crear gr√°fico de subgrupos con Altair
            base = alt.Chart(subgroup_data).encode(
                y=alt.Y('Subgrupo:N', sort=None)
            )
            
            lines = base.mark_rule().encode(
                x=alt.X('Lower:Q', title='Risk Ratio (IC 95%)'),
                x2='Upper:Q',
                color=alt.Color('Significativo:N', scale=alt.Scale(
                    domain=[True, False],
                    range=['#1E88E5', '#ccc']
                ), legend=None)
            )
            
            points = base.mark_circle(size=100).encode(
                x='RR:Q',
                color=alt.value('black'),
                tooltip=['Subgrupo', 'RR', 'Lower', 'Upper', 'p_interaction']
            )
            
            # L√≠nea vertical en RR=1
            vline = alt.Chart(pd.DataFrame({'x': [1]})).mark_rule(
                color='red', 
                strokeDash=[5, 5]
            ).encode(x='x')
            
            subgroup_chart = (vline + lines + points).properties(height=300)
            
            st.altair_chart(subgroup_chart, use_container_width=True)
            
            # Tabla de p-interacci√≥n
            st.markdown("**Valores p para interacci√≥n entre subgrupos:**")
            interaction_data = pd.DataFrame({
                'Subgrupo': ['Edad (‚â§65 vs >65)', 'HbA1c basal (‚â§8% vs >8%)', 'ECV basal (s√≠ vs no)'],
                'Valor p': ['0.21', '0.03', '0.001'],
                'Significancia': ['No significativo', 'Significativo', 'Altamente significativo']
            })
            
            st.table(interaction_data)
            
            # Conclusiones del meta-an√°lisis
            st.info("""
            üí° **Conclusiones del meta-an√°lisis:**
            
            Este meta-an√°lisis de 23 estudios con 58,721 participantes demuestra que los GLP-1 RA reducen significativamente la mortalidad cardiovascular en pacientes con DMT2 (RR 0.82, IC 95% 0.74-0.91, p<0.001).
            
            El an√°lisis de subgrupos revela:
            1. Mayor beneficio en pacientes con HbA1c >8% vs ‚â§8% (p-interacci√≥n=0.03)
            2. Efecto m√°s pronunciado en pacientes con enfermedad cardiovascular establecida (p-interacci√≥n=0.001)
            3. Tendencia a mayor beneficio en >65 a√±os sin alcanzar significancia estad√≠stica
            
            La evaluaci√≥n de sesgo de publicaci√≥n no mostr√≥ asimetr√≠a significativa en el funnel plot, sugiriendo ausencia de sesgo de publicaci√≥n importante. La heterogeneidad entre estudios fue moderada (I¬≤=37%).
            
            **Implicaciones cl√≠nicas:** Los GLP-1 RA deber√≠an considerarse preferentemente en pacientes con DMT2 y enfermedad cardiovascular establecida, especialmente aquellos con control gluc√©mico sub√≥ptimo.
            """)

    # Demostraci√≥n tendencias temporales
    elif tipo_analisis == "Tendencias temporales":
        st.subheader("An√°lisis de Tendencias Temporales en Investigaci√≥n")
        
        st.markdown("""
        Explore c√≥mo evolucionan las tendencias de investigaci√≥n cient√≠fica a lo largo del tiempo.
        """)
        
        col1, col2 = st.columns(2)
        
        with col1:
            area_investigacion = st.selectbox(
                "√Årea de investigaci√≥n",
                ["Diabetes", "Oncolog√≠a", "Cardiolog√≠a", "Neurolog√≠a", "Inmunolog√≠a"]
            )
        
        with col2:
            periodo = st.slider(
                "Periodo de an√°lisis",
                min_value=2000,
                max_value=2025,
                value=(2010, 2025)
            )
        
        temas_interes = st.multiselect(
            "Temas de inter√©s",
            ["GLP-1", "SGLT2", "Inmunoterapia", "Inteligencia Artificial", "Terapia g√©nica", "Medicina de precisi√≥n"],
            default=["GLP-1", "SGLT2"]
        )
        
        # Bot√≥n para ejecutar an√°lisis de tendencias
        if st.button("Analizar tendencias", use_container_width=True):
            # Simular datos de tendencias
            a√±os = list(range(2010, 2026))
            
            # Datos de publicaciones por a√±o y tema
            trend_data = pd.DataFrame({
                'A√±o': a√±os * len(temas_interes),
                'Tema': [tema for tema in temas_interes for _ in a√±os],
                'Publicaciones': [
                    int(100 * (1 + 0.2 * (a√±o - 2010) + random.uniform(-0.05, 0.05))) if tema == "GLP-1" else
                    int(50 * (1 + 0.4 * (a√±o - 2015) + random.uniform(-0.05, 0.05))) if tema == "SGLT2" else
                    int(30 * (1 + 0.5 * (a√±o - 2010) + random.uniform(-0.05, 0.05)))
                    for tema in temas_interes for a√±o in a√±os
                ]
            })
            
            # Filtrar por el periodo seleccionado
            trend_data = trend_data[(trend_data['A√±o'] >= periodo[0]) & (trend_data['A√±o'] <= periodo[1])]
            
            # Gr√°fico de tendencias
            st.subheader(f"Evoluci√≥n de publicaciones en {area_investigacion} ({periodo[0]}-{periodo[1]})")
            
            trend_chart = alt.Chart(trend_data).mark_line(point=True).encode(
                x=alt.X('A√±o:O', title='A√±o'),
                y=alt.Y('Publicaciones:Q', title='N√∫mero de publicaciones'),
                color=alt.Color('Tema:N', legend=alt.Legend(title="Tema")),
                tooltip=['A√±o', 'Tema', 'Publicaciones']
            ).properties(
                height=400
            ).interactive()
            
            st.altair_chart(trend_chart, use_container_width=True)
            
            # An√°lisis de citas e impacto
            st.subheader("An√°lisis de impacto por tema")
            
            # Simular datos de impacto
            impact_data = pd.DataFrame({
                'Tema': temas_interes,
                'Publicaciones': [
                    sum(trend_data[trend_data['Tema']
                'Tema': temas_interes,
                'Publicaciones': [
                    sum(trend_data[trend_data['Tema'] == tema]['Publicaciones']) 
                    for tema in temas_interes
                ],
                'Citas promedio': [
                    round(random.uniform(15, 35), 1) for _ in temas_interes
                ],
                'Factor impacto': [
                    round(random.uniform(3.5, 8.2), 2) for _ in temas_interes
                ],
                'Crecimiento anual (%)': [
                    round(random.uniform(8, 25), 1) for _ in temas_interes
                ]
            })
            
            st.dataframe(impact_data, use_container_width=True)
            
            # Gr√°fico de burbujas para visualizar impacto
            st.subheader("Mapa de impacto cient√≠fico")
            
            # Datos para gr√°fico de burbujas
            bubble_data = pd.DataFrame({
                'Tema': temas_interes * 3,
                'A√±o': [2015, 2015] + [2020, 2020] + [2025, 2025],
                'Publicaciones': [
                    int(random.uniform(100, 200)) for _ in range(len(temas_interes) * 3)
                ],
                'Citas': [
                    int(random.uniform(500, 5000)) for _ in range(len(temas_interes) * 3)
                ],
                'Impacto': [
                    round(random.uniform(2, 15), 1) for _ in range(len(temas_interes) * 3)
                ]
            })
            
            bubble_chart = alt.Chart(bubble_data).mark_circle().encode(
                x=alt.X('Publicaciones:Q', title='N√∫mero de publicaciones'),
                y=alt.Y('Citas:Q', title='N√∫mero de citas'),
                size=alt.Size('Impacto:Q', scale=alt.Scale(range=[100, 1000]), legend=alt.Legend(title="Factor de impacto")),
                color=alt.Color('Tema:N', legend=alt.Legend(title="Tema")),
                tooltip=['Tema', 'A√±o', 'Publicaciones', 'Citas', 'Impacto']
            ).properties(
                height=500
            ).interactive()
            
            st.altair_chart(bubble_chart, use_container_width=True)
            
            # An√°lisis de colaboraciones
            st.subheader("Redes de colaboraci√≥n global")
            
            # Simular datos de colaboraci√≥n internacional
            countries = ['Estados Unidos', 'China', 'Reino Unido', 'Alemania', 'Jap√≥n', 'Francia', 'Canad√°', 'Australia']
            connections = []
            
            for i in range(len(countries)):
                for j in range(i+1, len(countries)):
                    if random.random() > 0.3:  # 70% de probabilidad de conexi√≥n
                        strength = random.randint(5, 30)
                        connections.append({
                            'source': countries[i],
                            'target': countries[j],
                            'strength': strength
                        })
            
            # Visualizar la red de colaboraci√≥n (placeholder - en producci√≥n usar√≠a PyVis o NetworkX)
            st.markdown("""
            En una implementaci√≥n completa, aqu√≠ se mostrar√≠a un gr√°fico interactivo de redes de colaboraci√≥n
            entre instituciones y pa√≠ses en el campo seleccionado.
            """)
            
            # Tabla de colaboraciones
            collab_data = pd.DataFrame(connections)
            
            st.dataframe(collab_data, use_container_width=True)
            
            # An√°lisis de tendencias emergentes
            st.subheader("Temas emergentes identificados")
            
            emerging_topics = [
                {"tema": "Receptores GLP-1 de administraci√≥n oral", "crecimiento": "+127%", "a√±o_emergencia": 2023},
                {"tema": "Combinaciones GLP-1/GIP", "crecimiento": "+95%", "a√±o_emergencia": 2022},
                {"tema": "Terapias con c√©lulas madre para diabetes", "crecimiento": "+62%", "a√±o_emergencia": 2024},
                {"tema": "Inteligencia artificial en endocrinolog√≠a", "crecimiento": "+218%", "a√±o_emergencia": 2021}
            ]
            
            for i, topic in enumerate(emerging_topics):
                st.markdown(f"""
                <div style="background-color:#f0f7ff; padding:15px; border-radius:5px; margin-bottom:10px;">
                    <h5 style="margin-top:0">{topic['tema']}</h5>
                    <p><strong>Crecimiento anual:</strong> {topic['crecimiento']} | <strong>A√±o de emergencia:</strong> {topic['a√±o_emergencia']}</p>
                </div>
                """, unsafe_allow_html=True)
            
            # Resumen generado por IA
            st.info("""
            üí° **An√°lisis de tendencias IA:**
            
            En el campo de la diabetes, se observa un crecimiento constante en investigaci√≥n de agonistas del receptor GLP-1, con un aumento exponencial a partir de 2018, coincidiendo con la publicaci√≥n de resultados cardiovasculares favorables.
            
            Los inhibidores SGLT2 muestran una tendencia de crecimiento a√∫n m√°s pronunciada desde 2015, probablemente impulsada por sus beneficios cardiovasculares y renales descubiertos en ensayos pivotales.
            
            El an√°lisis de co-citaci√≥n sugiere una creciente convergencia entre investigaci√≥n en diabetes, obesidad y cardiolog√≠a, reflejando un enfoque m√°s integral en el manejo cardiometab√≥lico.
            
            Las colaboraciones internacionales han aumentado un 42% en el per√≠odo analizado, con una red especialmente fuerte entre instituciones de EE.UU., Reino Unido y Alemania.
            
            Los temas emergentes con mayor potencial disruptivo incluyen los agonistas duales/triples GLP-1/GIP, nuevas formulaciones orales y aplicaciones de inteligencia artificial en medicina de precisi√≥n para diabetes.
            """)

    # Demostraci√≥n de an√°lisis de redes
    elif tipo_analisis == "Network Analysis":
        st.subheader("Network Analysis de Evidencia Cient√≠fica")
        
        st.markdown("""
        Esta herramienta permite visualizar las interrelaciones entre publicaciones, autores, instituciones y conceptos cient√≠ficos.
        """)
        
        col1, col2 = st.columns(2)
        
        with col1:
            concepto_central = st.selectbox(
                "Concepto central",
                ["Diabetes tipo 2", "Alzheimer", "C√°ncer de p√°ncreas", "Obesidad", "COVID-19"]
            )
        
        with col2:
            profundidad_red = st.slider(
                "Profundidad de an√°lisis",
                min_value=1,
                max_value=4,
                value=2,
                help="Nivel de expansi√≥n de la red desde el concepto central"
            )
        
        tipo_red = st.radio(
            "Tipo de red a analizar",
            ["Conceptos relacionados", "Co-citaci√≥n de autores", "Colaboraci√≥n institucional"],
            horizontal=True
        )
        
        # Bot√≥n para ejecutar an√°lisis de red
        if st.button("Generar an√°lisis de red", use_container_width=True):
            st.success(f"Analizando red de {tipo_red} para {concepto_central}")
            
            # Simular visualizaci√≥n de red
            st.image("https://via.placeholder.com/800x500?text=Network+Analysis+Visualization", use_column_width=True)
            
            # M√©tricas de red
            st.subheader("M√©tricas de la red")
            
            col1, col2, col3, col4 = st.columns(4)
            
            with col1:
                st.metric("Nodos", "284")
            with col2:
                st.metric("Conexiones", "1,240")
            with col3:
                st.metric("Centralidad promedio", "3.2")
            with col4:
                st.metric("Densidad", "0.042")
            
            # Nodos principales
            st.subheader("Nodos principales por centralidad")
            
            # Simular datos de nodos principales
            top_nodes = pd.DataFrame({
                'Nodo': [
                    "Resistencia a insulina", "Obesidad", "Disfunci√≥n mitocondrial", 
                    "Inflamaci√≥n cr√≥nica", "Microbioma intestinal", "Estr√©s oxidativo"
                ] if tipo_red == "Conceptos relacionados" else [
                    "Smith, J.R.", "Wang, L.", "Johnson, M.K.", 
                    "Zhang, X.", "Patel, A.", "Gonz√°lez, R.M."
                ] if tipo_red == "Co-citaci√≥n de autores" else [
                    "Harvard Medical School", "Mayo Clinic", "Oxford University", 
                    "Karolinska Institute", "NIH", "Seoul National University"
                ],
                'Centralidad': [0.82, 0.76, 0.71, 0.68, 0.65, 0.63],
                'Conexiones': [58, 52, 47, 43, 41, 38]
            })
            
            st.dataframe(top_nodes, use_container_width=True)
            
            # Comunidades identificadas
            st.subheader("Comunidades identificadas en la red")
            
            # Simular datos de comunidades
            communities = [
                {"nombre": "Metabolismo energ√©tico", "nodos": 42, "densidad": 0.72},
                {"nombre": "Se√±alizaci√≥n de insulina", "nodos": 37, "densidad": 0.68},
                {"nombre": "Inflamaci√≥n y citoquinas", "nodos": 31, "densidad": 0.57},
                {"nombre": "Microbioma y barrera intestinal", "nodos": 28, "densidad": 0.64},
                {"nombre": "Funci√≥n mitocondrial", "nodos": 25, "densidad": 0.71}
            ] if tipo_red == "Conceptos relacionados" else [
                {"nombre": "Grupo Harvard-MIT", "nodos": 38, "densidad": 0.81},
                {"nombre": "Consorcio Europeo de Diabetes", "nodos": 35, "densidad": 0.73},
                {"nombre": "Red Asia-Pac√≠fico", "nodos": 29, "densidad": 0.68},
                {"nombre": "Grupo Escandinavo", "nodos": 24, "densidad": 0.79}
            ]
            
            for i, comm in enumerate(communities):
                st.markdown(f"""
                <div style="background-color:#f0f7ff; padding:10px; border-radius:5px; margin-bottom:10px;">
                    <h5 style="margin-top:0">{comm['nombre']}</h5>
                    <p><strong>Nodos:</strong> {comm['nodos']} | <strong>Densidad interna:</strong> {comm['densidad']}</p>
                </div>
                """, unsafe_allow_html=True)
            
            # Evoluci√≥n temporal de la red
            st.subheader("Evoluci√≥n temporal de la red (2015-2025)")
            
            # Simular datos de evoluci√≥n temporal
            temporal_data = pd.DataFrame({
                'A√±o': list(range(2015, 2026)),
                'Nodos': [80, 95, 112, 134, 156, 185, 205, 224, 248, 265, 284],
                'Conexiones': [120, 180, 267, 340, 445, 564, 684, 790, 912, 1084, 1240],
                'Densidad': [0.038, 0.040, 0.043, 0.039, 0.037, 0.041, 0.042, 0.040, 0.039, 0.042, 0.042]
            })
            
            # Crear gr√°fico de evoluci√≥n temporal
            base = alt.Chart(temporal_data).encode(
                x=alt.X('A√±o:O', title='A√±o')
            )
            
            # L√≠nea para nodos
            line_nodos = base.mark_line(color='blue').encode(
                y=alt.Y('Nodos:Q', title='N√∫mero de nodos', axis=alt.Axis(titleColor='blue'))
            )
            
            # Puntos para nodos
            points_nodos = base.mark_circle(color='blue', size=60).encode(
                y='Nodos:Q'
            )
            
            # Crear una segunda escala para las conexiones
            line_conexiones = base.mark_line(color='red').encode(
                y=alt.Y('Conexiones:Q', title='N√∫mero de conexiones', axis=alt.Axis(titleColor='red')),
            )
            
            points_conexiones = base.mark_circle(color='red', size=60).encode(
                y='Conexiones:Q'
            )
            
            # Combinar gr√°ficos
            temporal_chart = alt.layer(line_nodos, points_nodos, line_conexiones, points_conexiones).resolve_scale(
                y='independent'
            ).properties(
                height=400
            ).interactive()
            
            st.altair_chart(temporal_chart, use_container_width=True)
            
            # An√°lisis y conclusiones
            st.info("""
            üí° **An√°lisis de redes IA:**
            
            El an√°lisis de redes en torno a la Diabetes tipo 2 revela una estructura compleja con alta interconectividad entre diferentes dominios cient√≠ficos.
            
            Los nodos con mayor centralidad (resistencia a insulina, obesidad y disfunci√≥n mitocondrial) act√∫an como puentes entre diferentes comunidades tem√°ticas, sugiriendo su papel fundamental en la fisiopatolog√≠a.
            
            La evoluci√≥n temporal muestra un crecimiento exponencial de conexiones entre 2018-2022, posiblemente reflejando la integraci√≥n acelerada de conocimientos entre campos tradicionalmente separados como metabolismo, inflamaci√≥n y microbioma.
            
            Las cinco comunidades identificadas muestran alta cohesi√≥n interna pero tambi√©n conexiones significativas entre ellas, evidenciando la naturaleza multifactorial de la enfermedad.
            
            El an√°lisis sugiere √°reas emergentes con potencial para nueva investigaci√≥n en las intersecciones entre microbioma y se√±alizaci√≥n de insulina, as√≠ como entre inflamaci√≥n y funci√≥n mitocondrial, que presentan menos conexiones pero crecimiento reciente.
            """)

# 5. CONFIGURACI√ìN
elif "‚öôÔ∏è Configuraci√≥n" in menu:
    st.title("‚öôÔ∏è Configuraci√≥n de EvidenceWatch Pro")
    
    # Panel de configuraci√≥n
    st.markdown("""
    <div style='background-color:#f0f7ff; padding:15px; border-radius:5px; margin-bottom:20px;'>
        <h4 style='margin-top:0'>Personalice su experiencia</h4>
        <p>Configure sus preferencias y personalice la plataforma seg√∫n sus necesidades espec√≠ficas.</p>
    </div>
    """, unsafe_allow_html=True)
    
    # Tabs para organizar la configuraci√≥n
    tab1, tab2, tab3, tab4 = st.tabs(["üîî Alertas", "üè∑Ô∏è Etiquetas", "üîç B√∫squeda", "üîê Cuenta"])
    
    # Tab 1: Configuraci√≥n de alertas
    with tab1:
        st.subheader("Configuraci√≥n de alertas y notificaciones")
        
        # Frecuencia de notificaciones
        frecuencia = st.radio(
            "Frecuencia de notificaciones",
            ["Diaria", "Cada 2-3 d√≠as", "Semanal", "Quincenal"],
            horizontal=True
        )
        
        # Canal de notificaciones
        canal = st.multiselect(
            "Canales de notificaci√≥n",
            ["Email", "Aplicaci√≥n m√≥vil", "Navegador", "Slack", "Microsoft Teams"],
            default=["Email", "Aplicaci√≥n m√≥vil"]
        )
        
        # Tipos de contenido
        st.markdown("##### Tipos de contenido para alertas")
        col1, col2 = st.columns(2)
        
        with col1:
            alerta_articulos = st.checkbox("Nuevos art√≠culos", value=True)
            alerta_guideline = st.checkbox("Actualizaciones de gu√≠as cl√≠nicas", value=True)
            alerta_trials = st.checkbox("Ensayos cl√≠nicos", value=True)
        
        with col2:
            alerta_retraction = st.checkbox("Retractaciones", value=True)
            alerta_preprint = st.checkbox("Preprints", value=False)
            alerta_conference = st.checkbox("Res√∫menes de congresos", value=False)
        
        # Alertas por temas
        st.markdown("##### Configurar alertas por tema")
        
        if st.checkbox("A√±adir nuevo tema de seguimiento"):
            col1, col2, col3 = st.columns([3, 2, 1])
            
            with col1:
                nuevo_tema = st.text_input("T√©rmino o frase a monitorizar")
            
            with col2:
                relevancia = st.slider("Relevancia m√≠nima", 1, 5, 3)
            
            with col3:
                st.markdown("&nbsp;")  # Espacio en blanco para alinear con el bot√≥n
                st.button("‚ûï A√±adir")
        
        # Temas actualmente monitorizados
        st.markdown("##### Temas actualmente monitorizados")
        
        temas_seguimiento = [
            {"tema": "Semaglutide", "relevancia": 5, "frecuencia": "Diaria"},
            {"tema": "GLP-1 receptor agonists", "relevancia": 4, "frecuencia": "Diaria"},
            {"tema": "Tirzepatide", "relevancia": 4, "frecuencia": "Semanal"},
            {"tema": "Diabetes guidelines", "relevancia": 3, "frecuencia": "Semanal"}
        ]
        
        for tema in temas_seguimiento:
            col1, col2, col3 = st.columns([3, 1, 1])
            
            with col1:
                st.markdown(f"**{tema['tema']}**")
            
            with col2:
                st.markdown(f"Relevancia: {'üü¢' * tema['relevancia']}{'‚ö™' * (5-tema['relevancia'])}")
            
            with col3:
                st.markdown(f"{tema['frecuencia']} ‚úèÔ∏è üóëÔ∏è")
        
        # Guardar configuraci√≥n
        st.button("üíæ Guardar configuraci√≥n de alertas", use_container_width=True)
    
    # Tab 2: Configuraci√≥n de etiquetas
    with tab2:
        st.subheader("Gesti√≥n de etiquetas personalizadas")
        
        st.markdown("""
        Las etiquetas le permiten organizar y clasificar la literatura cient√≠fica seg√∫n sus necesidades.
        """)
        
        # Crear nueva etiqueta
        col1, col2, col3 = st.columns([3, 2, 1])
        
        with col1:
            nueva_etiqueta = st.text_input("Nombre de la etiqueta")
        
        with col2:
            color_etiqueta = st.color_picker("Color", "#1E88E5")
        
        with col3:
            st.markdown("&nbsp;")  # Espacio en blanco para alinear con el bot√≥n
            st.button("‚ûï Crear etiqueta")
        
        # Etiquetas actuales
        st.markdown("##### Etiquetas actuales")
        
        etiquetas = [
            {"nombre": "Review para journal club", "color": "#2e7d32", "articulos": 12},
            {"nombre": "Evidencia controvertida", "color": "#d32f2f", "articulos": 8},
            {"nombre": "Para meta-an√°lisis", "color": "#7b1fa2", "articulos": 23},
            {"nombre": "Implementaci√≥n cl√≠nica", "color": "#1565c0", "articulos": 17},
            {"nombre": "Metodolog√≠a dudosa", "color": "#f57c00", "articulos": 5}
        ]
        
        for etiqueta in etiquetas:
            col1, col2, col3 = st.columns([3, 1, 1])
            
            with col1:
                st.markdown(f"""
                <div style="display:flex; align-items:center;">
                    <div style="width:15px; height:15px; border-radius:50%; background-color:{etiqueta['color']}; margin-right:8px;"></div>
                    <span><strong>{etiqueta['nombre']}</strong></span>
                </div>
                """, unsafe_allow_html=True)
            
            with col2:
                st.markdown(f"{etiqueta['articulos']} art√≠culos")
            
            with col3:
                st.markdown("‚úèÔ∏è üóëÔ∏è")
        
        # Reglas autom√°ticas
        st.markdown("##### Reglas autom√°ticas de etiquetado")
        
        if st.checkbox("A√±adir regla autom√°tica"):
            col1, col2, col3 = st.columns([2, 2, 1])
            
            with col1:
                condicion = st.selectbox(
                    "Condici√≥n",
                    ["Contiene en t√≠tulo", "Contiene en abstract", "Autor es", "Journal es", "Factor de impacto >"]
                )
                valor_condicion = st.text_input("Valor")
            
            with col2:
                etiqueta_aplicar = st.selectbox(
                    "Aplicar etiqueta",
                    [e["nombre"] for e in etiquetas]
                )
            
            with col3:
                st.markdown("&nbsp;")
                st.button("‚ûï A√±adir regla")
        
        # Reglas existentes
        st.markdown("##### Reglas existentes")
        
        reglas = [
            {"condicion": "Contiene en t√≠tulo", "valor": "meta-analysis", "etiqueta": "Para meta-an√°lisis"},
            {"condicion": "Journal es", "valor": "The Lancet", "etiqueta": "Review para journal club"},
            {"condicion": "Factor de impacto >", "valor": "10", "etiqueta": "Review para journal club"}
        ]
        
        for regla in reglas:
            st.markdown(f"""
            <div style="display:flex; justify-content:space-between; padding:8px; background-color:#f8f9fa; border-radius:5px; margin-bottom:5px;">
                <div><strong>Si</strong> [{regla['condicion']}] <strong>es</strong> "{regla['valor']}"</div>
                <div><strong>‚Üí Aplicar</strong> "{regla['etiqueta']}"</div>
                <div>‚úèÔ∏è üóëÔ∏è</div>
            </div>
            """, unsafe_allow_html=True)
        
        # Guardar configuraci√≥n
        st.button("üíæ Guardar configuraci√≥n de etiquetas", use_container_width=True)
    
    # Tab 3: Configuraci√≥n de b√∫squeda
    with tab3:
        st.subheader("Preferencias de b√∫squeda")
        
        # Fuentes preferidas
        st.markdown("##### Fuentes de datos")
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.checkbox("PubMed", value=True)
            st.checkbox("Web of Science", value=False)
            st.checkbox("EMBASE", value=False)
        
        with col2:
            st.checkbox("Europe PMC", value=True)
            st.checkbox("Clinical Trials", value=True)
            st.checkbox("Google Scholar", value=False)
        
        with col3:
            st.checkbox("Cochrane Library", value=True)
            st.checkbox("LILACS", value=False)
            st.checkbox("medRxiv", value=True)
        
        # Criterios de relevancia
        st.markdown("##### Criterios de relevancia para resultados")
        
        st.slider("Importancia de actualidad", 1, 10, 7)
        st.slider("Importancia de factor de impacto", 1, 10, 6)
        st.slider("Importancia de n√∫mero de citas", 1, 10, 5)
        
        # Filtros predeterminados
        st.markdown("##### Filtros predeterminados")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.multiselect(
                "Tipos de estudio preferidos",
                ["Meta-an√°lisis", "Ensayo cl√≠nico", "Revisi√≥n sistem√°tica", "Estudio observacional", "Gu√≠a cl√≠nica"],
                default=["Meta-an√°lisis", "Ensayo cl√≠nico", "Revisi√≥n sistem√°tica"]
            )
        
        with col2:
            st.multiselect(
                "Especies preferidas",
                ["Humanos", "Ratones", "Ratas", "Primates no humanos", "C√©lulas in vitro"],
                default=["Humanos"]
            )
        
        # Opciones de AI
        st.markdown("##### Configuraci√≥n de an√°lisis por IA")
        
        nivel_analisis = st.select_slider(
            "Nivel de an√°lisis autom√°tico",
            options=["B√°sico", "Est√°ndar", "Profundo", "Experto"],
            value="Est√°ndar"
        )
        
        st.checkbox("Generar res√∫menes autom√°ticamente", value=True)
        st.checkbox("Extraer hallazgos clave", value=True)
        st.checkbox("Evaluar calidad metodol√≥gica", value=True)
        
        # Guardar configuraci√≥n
        st.button("üíæ Guardar preferencias de b√∫squeda", use_container_width=True)
    
    # Tab 4: Configuraci√≥n de cuenta
    with tab4:
        st.subheader("Gesti√≥n de cuenta")
        
        # Informaci√≥n de perfil
        st.markdown("##### Informaci√≥n de perfil")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.text_input("Nombre", value="Dr. Usuario")
            st.text_input("Email", value="usuario@ejemplo.com")
            st.text_input("Instituci√≥n", value="Hospital Universitario")
        
        with col2:
            st.selectbox("Especialidad", ["Endocrinolog√≠a", "Cardiolog√≠a", "Oncolog√≠a", "Neurolog√≠a", "Medicina interna"])
            st.multiselect(
                "√Åreas de inter√©s",
                ["Diabetes", "Obesidad", "Enfermedades cardiovasculares", "Trastornos tiroideos"],
                default=["Diabetes", "Obesidad"]
            )
        
        # Plan de suscripci√≥n
        st.markdown("##### Plan de suscripci√≥n")
        
        st.info("üîπ **Plan Pro** - Renovaci√≥n autom√°tica el 15/12/2025")
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.metric("B√∫squedas avanzadas", "68/100 restantes")
        
        with col2:
            st.metric("An√°lisis de IA", "124/200 restantes")
        
        with col3:
            st.metric("Meta-an√°lisis", "4/5 restantes")
        
        # Opciones de plan
        st.button("Actualizar a Plan Premium", use_container_width=True)
        
        # Exportaci√≥n e importaci√≥n
        st.markdown("##### Exportaci√≥n e importaci√≥n")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.button("üì§ Exportar biblioteca", use_container_width=True)
            st.button("üì§ Exportar preferencias", use_container_width=True)
        
        with col2:
            st.file_uploader("üì• Importar biblioteca", type=["json", "xml", "ris"])
            st.file_uploader("üì• Importar preferencias", type=["json"])
        
        # Integraci√≥n con herramientas
        st.markdown("##### Integraci√≥n con herramientas")
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.checkbox("Zotero", value=True)
            st.checkbox("Mendeley", value=False)
        
        with col2:
            st.checkbox("EndNote", value=False)
            st.checkbox("Microsoft Teams", value=True)
        
        with col3:
            st.checkbox("Slack", value=False)
            st.checkbox("Notion", value=True)
        
        # Eliminar cuenta
        st.markdown("##### Peligro")
        
        with st.expander("‚ö†Ô∏è Eliminar cuenta"):
            st.warning("Esta acci√≥n eliminar√° permanentemente su cuenta y todos los datos asociados.")
            st.text_input("Escriba 'ELIMINAR' para confirmar")
            st.button("üóëÔ∏è Eliminar cuenta permanentemente")

# A√±adir acci√≥n para mostrar informaci√≥n sobre la aplicaci√≥n
with st.sidebar:
    st.markdown("---")
    if st.button("‚ÑπÔ∏è Acerca de EvidenceWatch"):
        st.sidebar.markdown("""
        **EvidenceWatch Pro v2.5**
        
        Desarrollado por MedTech Solutions
        
        Esta aplicaci√≥n est√° dise√±ada para profesionales de la salud que desean mantenerse actualizados con la √∫ltima evidencia cient√≠fica relevante para su pr√°ctica cl√≠nica.
        
        ¬© 2025 Todos los derechos reservados
        """)
